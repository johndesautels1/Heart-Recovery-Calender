# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL connection settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=heart_recovery_calendar
DB_USER=postgres
DB_PASSWORD=your_postgres_password_here

# ===========================================
# SERVER CONFIGURATION
# ===========================================
# Port the backend server will run on
PORT=4000

# Node environment (development, production, test)
NODE_ENV=development

# ===========================================
# SECURITY
# ===========================================
# JWT secret key for token signing
# IMPORTANT: Generate a secure random string for production!
# You can generate one with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your_super_secret_jwt_key_change_this_in_production

# ===========================================
# CORS CONFIGURATION
# ===========================================
# Allowed origin for CORS
# For development, use your frontend URL
# For production, use your deployed frontend domain
CORS_ORIGIN=http://localhost:3000

# ===========================================
# OPTIONAL CONFIGURATION
# ===========================================
# Enable detailed SQL query logging (true/false)
# DB_LOGGING=false

# Email service configuration (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASS=your_app_password
# EMAIL_FROM=noreply@heartrecovery.com

# Twilio SMS Configuration (for SMS reminders)
# TWILIO_ACCOUNT_SID=your_twilio_account_sid
# TWILIO_AUTH_TOKEN=your_twilio_auth_token
# TWILIO_PHONE_NUMBER=+1234567890

# Firebase Push Notifications
# FIREBASE_PROJECT_ID=your-firebase-project-id
# FIREBASE_CLIENT_EMAIL=your-firebase-client-email
# FIREBASE_PRIVATE_KEY=your-firebase-private-key

# File upload configuration
# MAX_FILE_SIZE=5242880
# UPLOAD_DIR=./uploads

# Rate limiting (requests per window)
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100

# ===========================================
# PRODUCTION NOTES
# ===========================================
# For production deployment:
# 1. Set NODE_ENV=production
# 2. Generate a strong JWT_SECRET (at least 32 random characters)
# 3. Update DB_* settings with your production database credentials
# 4. Set CORS_ORIGIN to your production frontend URL
# 5. Enable SSL/TLS for database connections if required
# 6. Consider using environment-specific secret management (e.g., AWS Secrets Manager, HashiCorp Vault)
